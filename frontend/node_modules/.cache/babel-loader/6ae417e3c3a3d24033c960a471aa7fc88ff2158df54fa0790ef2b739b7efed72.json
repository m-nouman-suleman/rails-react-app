{"ast":null,"code":"var _jsxFileName = \"/Users/devs/Downloads/recipe-app/src/components/Recipe/AddIngredient.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport InputField from \"../shared/InputField\";\nimport \"./Recipe.css\";\nimport \"../shared/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddIngredient = props => {\n  _s();\n  const {\n    ingredient,\n    setIngredient,\n    ingredientList,\n    handleShowInputIngredient,\n    amountError,\n    setAmountError,\n    setNameError,\n    nameError\n  } = props;\n  const {\n    name,\n    amount\n  } = ingredient;\n  const handleIngredientName = _ref => {\n    let {\n      target\n    } = _ref;\n    const name = target.value;\n    setIngredient({\n      ...ingredient,\n      name: name\n    });\n  };\n  const handleIngredientAmount = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const amount = parseFloat(target.value);\n    setIngredient({\n      ...ingredient,\n      amount\n    });\n  };\n  useEffect(() => {\n    if (ingredient) {\n      !amount || amount === \"\" || amount == 0 ? setAmountError(true) : setAmountError(false);\n      name === \"\" ? setNameError(true) : setNameError(false);\n    }\n  }, [ingredient]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container input-field-col\",\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        color: nameError ? \"red\" : \"\",\n        inputType: \"text\",\n        handleInput: handleIngredientName,\n        classes: \"name-field\",\n        placeholderText: \"Name\",\n        value: name !== \"\" ? name : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          color: amountError ? \"red\" : \"\",\n          inputType: \"number\",\n          step: \"0.1\",\n          handleInput: handleIngredientAmount,\n          classes: \"amount-field\",\n          placeholderText: \"Amount\",\n          value: amount && amount !== \"\" ? amount : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: ` oz`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), ingredientList.length > 0 && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-x-circle-fill\",\n        onClick: () => handleShowInputIngredient(\"remove\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AddIngredient, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AddIngredient;\nexport default AddIngredient;\nvar _c;\n$RefreshReg$(_c, \"AddIngredient\");","map":{"version":3,"names":["React","useEffect","InputField","jsxDEV","_jsxDEV","AddIngredient","props","_s","ingredient","setIngredient","ingredientList","handleShowInputIngredient","amountError","setAmountError","setNameError","nameError","name","amount","handleIngredientName","_ref","target","value","handleIngredientAmount","_ref2","parseFloat","className","children","color","inputType","handleInput","classes","placeholderText","fileName","_jsxFileName","lineNumber","columnNumber","step","length","onClick","_c","$RefreshReg$"],"sources":["/Users/devs/Downloads/recipe-app/src/components/Recipe/AddIngredient.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport InputField from \"../shared/InputField\";\nimport \"./Recipe.css\";\nimport \"../shared/style.css\"\n\nconst AddIngredient = (props) => {\n\n  const { \n    ingredient, \n    setIngredient, \n    ingredientList, \n    handleShowInputIngredient,\n    amountError,\n    setAmountError,\n    setNameError,\n    nameError,\n  } = props;\n\n  const { name, amount } = ingredient;\n\n  const handleIngredientName = ({ target }) => {\n    const name = target.value;\n    setIngredient({ ...ingredient, name: name});\n  }\n\n  const handleIngredientAmount = ({ target }) => {\n    const amount = parseFloat(target.value);\n    setIngredient({ ...ingredient, amount });\n  }\n\n  useEffect(() => {\n    if (ingredient) {\n      (!amount \n        || amount === \"\" \n        || amount == 0) \n      ? setAmountError(true) \n      : setAmountError(false);\n\n      (name === \"\") \n      ? setNameError(true) \n      : setNameError(false);\n    }\n  }, [ingredient])\n\n  return (\n    <div className=\"input-row\">\n      <div className=\"flex-container input-field-col\">\n        <InputField \n          color={nameError ? \"red\" : \"\"}\n          inputType=\"text\"\n          handleInput={handleIngredientName}\n          classes=\"name-field\"\n          placeholderText=\"Name\"\n          value={name !== \"\" ? name : \"\"}\n        />\n        <div>\n          <InputField \n            color={amountError ? \"red\" : \"\"}\n            inputType=\"number\"\n            step=\"0.1\"\n            handleInput={handleIngredientAmount}\n            classes=\"amount-field\"\n            placeholderText=\"Amount\"\n            value={(amount && amount !== \"\") ? amount : \"\"}\n          />\n          <em>{` oz`}</em>\n        </div>\n        {ingredientList.length > 0 && <i className=\"bi bi-x-circle-fill\" onClick={() => handleShowInputIngredient(\"remove\")}></i>}\n      </div>\n    </div>\n  )\n}\n\nexport default AddIngredient;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}