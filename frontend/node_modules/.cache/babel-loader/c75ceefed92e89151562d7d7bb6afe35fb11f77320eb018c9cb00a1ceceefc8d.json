{"ast":null,"code":"var _jsxFileName = \"/Users/devs/Desktop/test-project/recipe-app/src/components/Recipe/IngredientInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AddIngredient from \"./AddIngredient\";\nimport IngredientList from \"./IngredientList\";\nimport \"./Recipe.css\";\nimport \"../common/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IngredientInfo = props => {\n  _s();\n  const {\n    ingredientList,\n    setIngredientList,\n    ingredient,\n    setIngredient\n  } = props;\n  const [showInputIngredient, setShowInputIngredient] = useState(false);\n  const handleShowInputIngredient = flag => {\n    if (flag === \"remove\") {\n      setShowInputIngredient(false);\n      return;\n    }\n    setShowInputIngredient(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card card-size\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [ingredientList.length > 0 && /*#__PURE__*/_jsxDEV(IngredientList, {\n        ingredientList: ingredientList,\n        setIngredientList: setIngredientList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), showInputIngredient && /*#__PURE__*/_jsxDEV(AddIngredient, {\n        ingredient: ingredient,\n        setIngredient: setIngredient,\n        ingredientList: ingredientList,\n        setIngredientList: setIngredientList,\n        handleShowInputIngredient: handleShowInputIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), showInputIngredient ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success add-button\",\n        onClick: handleIngredientList,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success add-button\",\n        onClick: handleShowInputIngredient,\n        children: \"Add New Ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(IngredientInfo, \"31PKY3Yt7TRlCxoadGMLYNFC5gM=\");\n_c = IngredientInfo;\nexport default IngredientInfo;\nvar _c;\n$RefreshReg$(_c, \"IngredientInfo\");","map":{"version":3,"names":["React","useState","AddIngredient","IngredientList","jsxDEV","_jsxDEV","IngredientInfo","props","_s","ingredientList","setIngredientList","ingredient","setIngredient","showInputIngredient","setShowInputIngredient","handleShowInputIngredient","flag","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","class","type","onClick","handleIngredientList","_c","$RefreshReg$"],"sources":["/Users/devs/Desktop/test-project/recipe-app/src/components/Recipe/IngredientInfo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport AddIngredient from \"./AddIngredient\";\nimport IngredientList from \"./IngredientList\";\nimport \"./Recipe.css\";\nimport \"../common/style.css\"\n\nconst IngredientInfo = (props) => {\n  const { ingredientList, setIngredientList, ingredient, setIngredient } = props;\n  const [ showInputIngredient, setShowInputIngredient ] = useState(false);\n\n  const handleShowInputIngredient = (flag) => {\n    if (flag === \"remove\") {\n      setShowInputIngredient(false);\n      return;\n    }\n    setShowInputIngredient(true);\n  }\n\n  return (\n    <div className=\"card card-size\">\n      <div className=\"card-body\">\n        {ingredientList.length > 0 && (\n          <IngredientList \n            ingredientList={ingredientList} \n            setIngredientList={setIngredientList} \n          />\n        )} \n        {showInputIngredient && (\n          <AddIngredient \n            ingredient={ingredient} \n            setIngredient={setIngredient} \n            ingredientList={ingredientList} \n            setIngredientList={setIngredientList} \n            handleShowInputIngredient={handleShowInputIngredient}\n          />\n        )}\n      </div>\n      {showInputIngredient ? (\n        <div class=\"card-footer\">\n <button type=\"button\" className=\"btn btn-outline-success add-button\" onClick={handleIngredientList}>Done</button>\n        </div>\n      ) : (\n        <div className=\"card-footer\">\n          <button \n            type=\"button\" \n            className=\"btn btn-outline-success add-button\" \n            onClick={handleShowInputIngredient}\n          >\n            Add New Ingredient\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default IngredientInfo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,cAAc;AACrB,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAChC,MAAM;IAAEC,cAAc;IAAEC,iBAAiB;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAGL,KAAK;EAC9E,MAAM,CAAEM,mBAAmB,EAAEC,sBAAsB,CAAE,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEvE,MAAMc,yBAAyB,GAAIC,IAAI,IAAK;IAC1C,IAAIA,IAAI,KAAK,QAAQ,EAAE;MACrBF,sBAAsB,CAAC,KAAK,CAAC;MAC7B;IACF;IACAA,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bb,OAAA;MAAKY,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvBT,cAAc,CAACU,MAAM,GAAG,CAAC,iBACxBd,OAAA,CAACF,cAAc;QACbM,cAAc,EAAEA,cAAe;QAC/BC,iBAAiB,EAAEA;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAExC,EACAV,mBAAmB,iBAClBR,OAAA,CAACH,aAAa;QACZS,UAAU,EAAEA,UAAW;QACvBC,aAAa,EAAEA,aAAc;QAC7BH,cAAc,EAAEA,cAAe;QAC/BC,iBAAiB,EAAEA,iBAAkB;QACrCK,yBAAyB,EAAEA;MAA0B;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAExD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG,EACLV,mBAAmB,gBAClBR,OAAA;MAAKmB,KAAK,EAAC,aAAa;MAAAN,QAAA,eAC/Bb,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,oCAAoC;QAACS,OAAO,EAAEC,oBAAqB;QAAAT,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpG,gBAENlB,OAAA;MAAKY,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1Bb,OAAA;QACEoB,IAAI,EAAC,QAAQ;QACbR,SAAS,EAAC,oCAAoC;QAC9CS,OAAO,EAAEX,yBAA0B;QAAAG,QAAA,EACpC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEZ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAAf,EAAA,CAhDKF,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAkDpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}