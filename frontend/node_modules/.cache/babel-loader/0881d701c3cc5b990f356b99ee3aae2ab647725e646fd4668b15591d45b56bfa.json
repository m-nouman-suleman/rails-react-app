{"ast":null,"code":"var _jsxFileName = \"/Users/devs/Desktop/test-project/recipe-app/src/components/Recipe/IngredientInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddIngredient from \"./AddIngredient\";\nimport IngredientList from \"./IngredientList\";\nimport \"./Recipe.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IngredientInfo = () => {\n  _s();\n  const [showInputIngredient, setShowInputIngredient] = useState(true);\n  const [ingredientList, setIngredientList] = useState([]);\n  const [ingredient, setIngredient] = useState({\n    name: \"\",\n    amount: 0\n  });\n  const handleShowInputIngredient = flag => {\n    if (flag) {\n      setShowInputIngredient(true);\n      return;\n    }\n    setShowInputIngredient(false);\n  };\n  useEffect(() => {\n    setIngredient({\n      name: \"\",\n      amount: 0\n    });\n  }, [ingredientList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card card-size\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [showInputIngredient && /*#__PURE__*/_jsxDEV(AddIngredient, {\n        ingredient: ingredient,\n        setIngredient: setIngredient,\n        ingredientList: ingredientList,\n        setIngredientList: setIngredientList,\n        handleShowInputIngredient: handleShowInputIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), ingredientList.length > 0 && /*#__PURE__*/_jsxDEV(IngredientList, {\n        ingredientList: ingredientList,\n        setIngredientList: setIngredientList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success add-button\",\n        onClick: handleShowInputIngredient,\n        children: \"Add New Ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(IngredientInfo, \"nkHeNu5cFq/zO0+igf7vohcBEmc=\");\n_c = IngredientInfo;\nexport default IngredientInfo;\nvar _c;\n$RefreshReg$(_c, \"IngredientInfo\");","map":{"version":3,"names":["React","useState","useEffect","AddIngredient","IngredientList","jsxDEV","_jsxDEV","IngredientInfo","_s","showInputIngredient","setShowInputIngredient","ingredientList","setIngredientList","ingredient","setIngredient","name","amount","handleShowInputIngredient","flag","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","type","onClick","_c","$RefreshReg$"],"sources":["/Users/devs/Desktop/test-project/recipe-app/src/components/Recipe/IngredientInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AddIngredient from \"./AddIngredient\";\nimport IngredientList from \"./IngredientList\";\nimport \"./Recipe.css\";\n\nconst IngredientInfo = () => {\n  const [ showInputIngredient, setShowInputIngredient ] = useState(true);\n  const [ ingredientList, setIngredientList ] = useState([]);\n  const [ingredient, setIngredient] = useState({\n    name: \"\",\n    amount: 0\n  })\n\n\n  const handleShowInputIngredient = (flag) => {\n    if (flag) {\n      setShowInputIngredient(true);\n      return;\n    }\n    setShowInputIngredient(false);\n  }\n\n  useEffect(() => {\n    setIngredient({\n      name: \"\",\n      amount: 0\n    })\n  }, [ingredientList])\n\n  return (\n    <div className=\"card card-size\">\n      <div className=\"card-body\">\n        {showInputIngredient && (\n          <AddIngredient \n            ingredient={ingredient} \n            setIngredient={setIngredient} \n            ingredientList={ingredientList} \n            setIngredientList={setIngredientList} \n            handleShowInputIngredient={handleShowInputIngredient}\n          />\n        )}\n        {ingredientList.length > 0 && (\n          <IngredientList ingredientList={ingredientList} setIngredientList={setIngredientList} />\n        )} \n        <button \n          type=\"button\" \n          className=\"btn btn-outline-success add-button\" \n          onClick={handleShowInputIngredient}\n        >\n          Add New Ingredient\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default IngredientInfo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAAEC,mBAAmB,EAAEC,sBAAsB,CAAE,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAAEU,cAAc,EAAEC,iBAAiB,CAAE,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC;IAC3Cc,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC,CAAC;EAGF,MAAMC,yBAAyB,GAAIC,IAAI,IAAK;IAC1C,IAAIA,IAAI,EAAE;MACRR,sBAAsB,CAAC,IAAI,CAAC;MAC5B;IACF;IACAA,sBAAsB,CAAC,KAAK,CAAC;EAC/B,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC;MACZC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,EAAE,CAACL,cAAc,CAAC,CAAC;EAEpB,oBACEL,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7Bd,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvBX,mBAAmB,iBAClBH,OAAA,CAACH,aAAa;QACZU,UAAU,EAAEA,UAAW;QACvBC,aAAa,EAAEA,aAAc;QAC7BH,cAAc,EAAEA,cAAe;QAC/BC,iBAAiB,EAAEA,iBAAkB;QACrCK,yBAAyB,EAAEA;MAA0B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAExD,EACAb,cAAc,CAACc,MAAM,GAAG,CAAC,iBACxBnB,OAAA,CAACF,cAAc;QAACO,cAAc,EAAEA,cAAe;QAACC,iBAAiB,EAAEA;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtF,eACDlB,OAAA;QACEoB,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAC,oCAAoC;QAC9CQ,OAAO,EAAEV,yBAA0B;QAAAG,QAAA,EACpC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAAhB,EAAA,CAjDKD,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}