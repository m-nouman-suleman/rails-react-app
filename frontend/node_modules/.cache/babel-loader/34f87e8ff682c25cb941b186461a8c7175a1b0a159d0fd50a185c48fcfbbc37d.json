{"ast":null,"code":"var _jsxFileName = \"/Users/devs/Desktop/test-project/recipe-app/src/components/Recipe/IngredientList.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Recipe.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IngredientList = props => {\n  const {\n    ingredientList,\n    setIngredientList\n  } = props;\n  const removeIngredient = name => {\n    const filteredIngredients = ingredientList.filter(ingredient => ingredient.name !== name);\n    setIngredientList(filteredIngredients);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ingredientList.length > 0 && ingredientList.map((ingredient, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-container input-field-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-field name-position\",\n            children: ingredient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"amount-field\",\n              children: `${ingredient.amount} oz`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-x-circle-fill remove-icon\",\n            onClick: () => removeIngredient(ingredient.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = IngredientList;\nexport default IngredientList;\nvar _c;\n$RefreshReg$(_c, \"IngredientList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","IngredientList","props","ingredientList","setIngredientList","removeIngredient","name","filteredIngredients","filter","ingredient","children","length","map","index","className","fileName","_jsxFileName","lineNumber","columnNumber","amount","onClick","_c","$RefreshReg$"],"sources":["/Users/devs/Desktop/test-project/recipe-app/src/components/Recipe/IngredientList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Recipe.css\";\n\nconst IngredientList = (props) => {\n\n  const {ingredientList, setIngredientList, } = props;\n\n  const removeIngredient = (name) => {\n    const filteredIngredients = ingredientList.filter((ingredient) => ingredient.name !== name);\n    setIngredientList(filteredIngredients);\n  }\n\n  return (\n    <>\n      {ingredientList.length > 0 && (\n        ingredientList.map((ingredient, index) => {\n          return (\n            <div key={index}>\n              <div className=\"flex-container input-field-col\">\n                <div className=\"name-field name-position\">{ingredient.name}</div>\n              <div>\n                <div className=\"amount-field\">{`${ingredient.amount} oz`}</div>\n              </div>\n              <i className=\"bi bi-x-circle-fill remove-icon\" onClick={() => removeIngredient(ingredient.name)}></i>\n              </div>\n              <hr />\n            </div>\n          )\n        })\n      )}\n    </>\n  )\n}\n\nexport default IngredientList;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtB,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAEhC,MAAM;IAACC,cAAc;IAAEC;EAAmB,CAAC,GAAGF,KAAK;EAEnD,MAAMG,gBAAgB,GAAIC,IAAI,IAAK;IACjC,MAAMC,mBAAmB,GAAGJ,cAAc,CAACK,MAAM,CAAEC,UAAU,IAAKA,UAAU,CAACH,IAAI,KAAKA,IAAI,CAAC;IAC3FF,iBAAiB,CAACG,mBAAmB,CAAC;EACxC,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAU,QAAA,EACGP,cAAc,CAACQ,MAAM,GAAG,CAAC,IACxBR,cAAc,CAACS,GAAG,CAAC,CAACH,UAAU,EAAEI,KAAK,KAAK;MACxC,oBACEf,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAKgB,SAAS,EAAC,gCAAgC;UAAAJ,QAAA,gBAC7CZ,OAAA;YAAKgB,SAAS,EAAC,0BAA0B;YAAAJ,QAAA,EAAED,UAAU,CAACH;UAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,eACnEpB,OAAA;YAAAY,QAAA,eACEZ,OAAA;cAAKgB,SAAS,EAAC,cAAc;cAAAJ,QAAA,EAAG,GAAED,UAAU,CAACU,MAAO;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAO;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC3D,eACNpB,OAAA;YAAGgB,SAAS,EAAC,iCAAiC;YAACM,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACI,UAAU,CAACH,IAAI;UAAE;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC/F,eACNpB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA,GAREL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAST;IAEV,CAAC;EACF,iBACA;AAEP,CAAC;AAAAG,EAAA,GA7BKpB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}