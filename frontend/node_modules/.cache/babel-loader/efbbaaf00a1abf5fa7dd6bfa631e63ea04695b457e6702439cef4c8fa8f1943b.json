{"ast":null,"code":"var _jsxFileName = \"/Users/devs/Desktop/test-project/recipe-app/src/components/Recipe/AddIngredient.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Recipe.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddIngredient = props => {\n  const {\n    ingredient,\n    setIngredient,\n    ingredientList,\n    setIngredientList,\n    handleShowInputIngredient\n  } = props;\n  const handleIngredientName = _ref => {\n    let {\n      target\n    } = _ref;\n    const name = target.value;\n    if (name !== \"\") setIngredient({\n      ...ingredient,\n      name: target.value\n    });else setError(true);\n  };\n  const handleIngredientAmount = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const amount = target.value;\n    if (amount !== 0) setIngredient({\n      ...ingredient,\n      amount: target.value\n    });else setError(true);\n  };\n  const handleIngredientList = () => {\n    ingredient.name !== \"\" && ingredient.amount !== 0 && setIngredientList(oldArray => [...oldArray, {\n      name: ingredient.name,\n      amount: ingredient.amount\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container input-field-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          borderColor: error ? \"red\" : \"\"\n        },\n        className: \"name-field\",\n        type: \"text\",\n        value: ingredient.name,\n        onChange: handleIngredientName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: ingredient.amount,\n          onChange: handleIngredientAmount,\n          className: \"amount-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: ` oz`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), ingredientList.length > 0 && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-x-circle-fill\",\n        onClick: () => handleShowInputIngredient(\"remove\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-success add-button\",\n      onClick: handleIngredientList,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = AddIngredient;\nexport default AddIngredient;\nvar _c;\n$RefreshReg$(_c, \"AddIngredient\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AddIngredient","props","ingredient","setIngredient","ingredientList","setIngredientList","handleShowInputIngredient","handleIngredientName","_ref","target","name","value","setError","handleIngredientAmount","_ref2","amount","handleIngredientList","oldArray","className","children","style","borderColor","error","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["/Users/devs/Desktop/test-project/recipe-app/src/components/Recipe/AddIngredient.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Recipe.css\";\n\nconst AddIngredient = (props) => {\n\n  const { ingredient, setIngredient, ingredientList, setIngredientList, handleShowInputIngredient } = props;\n\n  const handleIngredientName = ({ target }) => {\n    const name = target.value;\n    if (name !== \"\")\n      setIngredient({ ...ingredient, name: target.value});\n    else \n      setError(true);\n  }\n\n  const handleIngredientAmount = ({ target }) => {\n    const amount = target.value;\n    if (amount !== 0)\n      setIngredient({ ...ingredient, amount: target.value });\n    else\n      setError(true);\n  }\n\n  const handleIngredientList = () => {\n    ingredient.name !== \"\" \n    && ingredient.amount !== 0 \n    && setIngredientList(oldArray => [...oldArray, {name: ingredient.name, amount: ingredient.amount} ])\n  }\n\n  return (\n    <div className=\"input-row\">\n      <div className=\"flex-container input-field-col\">\n        <input style={{ borderColor: error ? \"red\" : \"\" }} className=\"name-field\" type=\"text\" value={ingredient.name} onChange={handleIngredientName}></input>\n        <div>\n          <input type=\"number\" value={ingredient.amount} onChange={handleIngredientAmount} className=\"amount-field\" />\n          <em>{` oz`}</em>\n        </div>\n        {ingredientList.length > 0 && <i className=\"bi bi-x-circle-fill\" onClick={() => handleShowInputIngredient(\"remove\")}></i>}\n      </div>\n      <button type=\"button\" className=\"btn btn-outline-success add-button\" onClick={handleIngredientList}>Done</button>\n    </div>\n  )\n}\n\nexport default AddIngredient;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}