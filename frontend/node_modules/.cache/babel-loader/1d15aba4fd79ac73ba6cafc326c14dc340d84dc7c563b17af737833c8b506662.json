{"ast":null,"code":"var _jsxFileName = \"/Users/devs/Desktop/test-project/recipe-app/src/components/Recipe/IngredientInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Recipe.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IngredientInfo = () => {\n  _s();\n  const [ingredientList, setIngredientList] = useState([]);\n  const [ingredient, setIngredient] = useState({\n    name: \"\",\n    amount: 0\n  });\n  const handleIngredientName = _ref => {\n    let {\n      target\n    } = _ref;\n    const name = target.value;\n    if (name !== \"\") setIngredient({\n      ...ingredient,\n      name: target.value\n    });\n  };\n  const handleIngredientAmount = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const amount = target.value;\n    if (amount !== 0) setIngredient({\n      ...ingredient,\n      amount: target.value\n    });\n  };\n  const handleIngredientList = () => {\n    ingredient.name !== \"\" && ingredient.amount !== 0 && setIngredientList(oldArray => [...oldArray, {\n      name: ingredient.name,\n      amount: ingredient.amount\n    }]);\n  };\n  const removeIngredient = index => {\n    const filteredIngredients = ingredientList.filter((ingredient, idx) => ingredient.name === index);\n    console.log(filteredIngredients);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [ingredientList.length > 0 && ingredientList.map((ingredient, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-container input-field-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-field name-position\",\n            children: ingredient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"amount-field\",\n              children: `${ingredient.amount} oz`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-x-circle-fill\",\n            onClick: removeIngredient(ingredient.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container input-field-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"name-field\",\n          type: \"text\",\n          value: ingredient.name,\n          onChange: handleIngredientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: ingredient.amount,\n            onChange: handleIngredientAmount,\n            className: \"amount-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n            children: ` oz`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-x-circle-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success add-button\",\n        onClick: handleIngredientList,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(IngredientInfo, \"0AfsNNOScD1cMVliFPNRoeGJK9o=\");\n_c = IngredientInfo;\nexport default IngredientInfo;\nvar _c;\n$RefreshReg$(_c, \"IngredientInfo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","IngredientInfo","_s","ingredientList","setIngredientList","ingredient","setIngredient","name","amount","handleIngredientName","_ref","target","value","handleIngredientAmount","_ref2","handleIngredientList","oldArray","removeIngredient","index","filteredIngredients","filter","idx","console","log","children","length","map","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["/Users/devs/Desktop/test-project/recipe-app/src/components/Recipe/IngredientInfo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Recipe.css\";\n\nconst IngredientInfo = () => {\n  const [ ingredientList, setIngredientList ] = useState([]);\n  const [ingredient, setIngredient] = useState({\n    name: \"\",\n    amount: 0\n  })\n\n  const handleIngredientName = ({ target }) => {\n    const name = target.value;\n    if (name !== \"\")\n      setIngredient({ ...ingredient, name: target.value});\n  }\n\n  const handleIngredientAmount = ({ target }) => {\n    const amount = target.value;\n    if (amount !== 0)\n      setIngredient({ ...ingredient, amount: target.value });\n  }\n\n  const handleIngredientList = () => {\n    ingredient.name !== \"\" \n    && ingredient.amount !== 0 \n    && setIngredientList(oldArray => [...oldArray, {name: ingredient.name, amount: ingredient.amount} ])\n  }\n\n  const removeIngredient = (index) => {\n    const filteredIngredients = ingredientList.filter((ingredient, idx) => ingredient.name === index);\n    console.log(filteredIngredients);\n  }\n\n  return (\n    <>\n      {ingredientList.length > 0 && (\n        ingredientList.map((ingredient, index) => {\n          return (\n            <div key={index}>\n              <div className=\"flex-container input-field-col\">\n                <div className=\"name-field name-position\">{ingredient.name}</div>\n              <div>\n                <div className=\"amount-field\">{`${ingredient.amount} oz`}</div>\n              </div>\n              <i className=\"bi bi-x-circle-fill\" onClick={removeIngredient(ingredient.name)}></i>\n              </div>\n              <hr />\n            </div>\n          )\n        })\n      )}\n      <div className=\"input-row\">\n        <div className=\"flex-container input-field-col\">\n          <input className=\"name-field\" type=\"text\" value={ingredient.name} onChange={handleIngredientName}></input>\n          <div>\n            <input type=\"number\" value={ingredient.amount} onChange={handleIngredientAmount} className=\"amount-field\" />\n            <em>{` oz`}</em>\n          </div>\n          <i className=\"bi bi-x-circle-fill\"></i>\n        </div>\n        <button type=\"button\" className=\"btn btn-outline-success add-button\" onClick={handleIngredientList}>Done</button>\n      </div>\n    </>\n  )\n}\n\nexport default IngredientInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}